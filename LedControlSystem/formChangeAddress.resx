<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Icon" type="System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAQsADQ0NAA4QDQAQEw8ABQUYABQV
        FAAWGRYAGRwWABQVGQAcHRwAAgMnAA4RKgAZGSkAAQE3ABgZOgAfICAAHyIsACEiIQAkKSEAKC0mAC8v
        LwArMScALDEpADA2LQAzOC8AKSw3ACkwNwAwMTEANDk0ADE1OwAAdgAAAHgAAAh+BgAGfQgACH4KADxD
        NwBCSzwAQ1M/AAUFSQAXGEgAAwNXABgZVgAfJEIAHSBSACstSQArMUEAKClWADMzWgABAmgAGhtmAAYG
        eQAXGHIAHyRtAB0idgAsLWYALTFqADY8ZQAvL3gAMzR1ADtDWQA9RWkAO0R4AEZGRgBHTkIASU1GAEpV
        RABMUkoATFhKAENJVwBNWlMAUFxeAFRgTABdaVgAYWxbAGRzXABmeVwAR0dnAFRZZwBFSXoASVR2AFNb
        fwBYZmoAWWZ0AGBucwBvf3kAd3d3AAuCCwAQiQwAD4cTABKFEwAUihYAFIUYAByKGwAhjB4AI5EeAB2L
        IgAljSYAJZEiACyTIwAnkSwAK5IrADKWKwAvkzMANJQyADyWMQA0mTAAPJk1ADKTPAA5lT8APZg4AEGa
        OwBHoDsAPZhGAEOdQwBJmkQAQJlMAEueSwBMnFcAVptSAF6cUwBZn1oAZJteAEmiSABWp0cAV6pGAFOl
        TABZpU4ATKNTAFanUABeolUAVqpQAFuoUQBVoVwAXKBcAGCsVQBiqVoAaqpcAF6MZwBXlGgAXYx/AGqI
        ZwBwgWcAcIBvAHiNawBll2cAcZRkAG+FfQB/j3YAcoZ5AGabeAB1lXIAf5J3AHCbdwB2m3kAa6dhAH6s
        bQBvsGcAebhoAGincwB1oHgAeLN0AIi/bQCGoHwAg6p7AIW1dwAEBIYAGxuEAAIClwAPEZoAGhuTACwt
        hQAuNIwANTmOACotmQA0OJsABQaoAA4QpwAVF6cADQ25ABkZtQAcIaEAKCipAC0zpQA0OqgAKyu1AC4x
        sAA2OLMAPkKGAD1EmAA9RqYAPkG1AEZIiwBLVYgAUVmIAEZLkgBJVJMAW16QAFpuhQBffY0AW2aYAGBp
        iwBjeooAYmiTAGN4lQBHSasASVaoAFBZqwBHR7QATFSyAFFWtgBcZqwAaHeqAGBouAAODsUAKCjEADs7
        yQBKSskAVlbMAFJS0wBiYs8AbW3RAHh40wBrh4cAc4qGAGueiAB7logAaIKeAHCBlAB2nJYAfKuZAHOK
        pwB5lKQAgICAAICNjgCBmYgAgpqWAJiYmACPo4wAjraGAJe7iQCOo5AAkaqcAJ25mACmvZoAiJi3AJG2
        pQCbwoUAp8GZAIeH0ACentcAv7/jANDQ5gDu7u4A8PDwAP///wAAAFY/AD8AFQcHFQA/AD8AFQcHFQA/
        AD8AFQcHFQA/AD8AFQcHFQA/AD8AFQdWAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAPwDtFQA/AD8AFQcHFQA/AD8AFQcHFQA/AD8AFQcHFQA/AD8AFQcHFQA/AD8AFQcH
        FekQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABADEAAVABUAEAMD
        EAAVABUAEAcDEAAVABUAEAMDEAAVABUAEAMDEAAVABUAEAMDEAABBAAHAAcAAwIABwAQABAABwMHBwAQ
        ABAABwEDAwAHAAcAAwMBBwAQAAcAAwEDAwACAwAHAAcAAwECAwAQAxQXJSUlJBQYEBMEEAQDBwAQABAA
        BwMDEAMQAAcABwABBAADEAAVABUAEAMDEANBJZiSiXyEnJKjTJRISUIlJRNBBz8GHRhBSyVCAxUAEAME
        EAAAAAAAAAAAAAAABxdMd14iIh8iHyJaXmNuc4J6kpCOS0lJS5B6ZWhLEwMAAAAAAAAHFQA/AD8AFRAQ
        SpJlIh8fHx8fIh8iHx8fHx8fIiFbX2pqY1siHx9+SUkAHQcHFQAAAAAAAAAAAAMYjl4fHx8iHx8fHx8f
        Ih8iHx8iHyIfIh8iHx8fIh8ieEIHAAAAAAAHFQA/AD8AHRVKax8fIh8fIh8iHx8fHx8fIh8fHx8fHx8f
        Ih8fHx8fV6QXHRAHFQAAAQAAAQAAAhh6IR8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fH29EBwAA
        AQAJEQEeAR4BGklvHx8fIh8iHx8iHx8iHx8iHx8iHx8iHyIfIh8fIh8fH1hKHgkJEQEFCQENAQ0BGo9a
        Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fImhGEQUFCQEFDAENBQ0LHpciIh8fIh8iHx8iHx8i
        Hx8iHx8iHx8iHyIfIh8fIh8fXpcbDQULDAEMDwstBS0LP6AiHx8fHx8fIh8fIh8fHx8fHx8fHx8fHx8f
        Hx8fH1dzjU4MKw0MDwULBQsLCwULLpEfHx8fHx8fHx8fIml/f3xwaWZjXVpYIyMjV11rd5dHKw0LBQsF
        CwsPLQtNC00LRZoiHyIfIh8iHx9j9/T3nqKl9/f39O7z4u6V61VUUitODk0LLQ8PLQsLDgsLCwsOD1Jn
        Hx8fHx8fIiLv8GoiHx8iIiFbpJGKUjwrKw8PDA4LCwsLDgsOCwsoLQ5NDk0OMDyVfiIfHx8fH174fx8f
        Hx8fHx8fifFbkeotPSgoMA5NDk0OMCgoMA4ODg4ODg4ODigvVHkiHx8iH2P0aiIfIh8iHx8favhiIXlU
        Lw8ODg4ODg4ODg4ODg4oKg43DjcOKigoPVOhWh8fH134cB8fHx8fIh8iV/CDIiJ74DksLw44DjgOKigo
        Kg4nKg4qJyoOKicnKipTmV0fHyL4iSIfHx8fHx8fIqWeIh8fb+A9LCcqDionKg4nKg4nKicqJyonKSon
        Kic4PetlHx+e8CIiHx8iHx8fH4fvIh8fH2XiUCoyJyonKicnKScpMic6JzonMikpMic6KlHfch97+F0i
        Hx8fIh8iH373ISIfIh9doFBPJzonMikyMicnKSkpJykpJyknKSknMSo4ynZk8nIfIh8fHx8fIp3vIh8f
        Hx8fWpZRMiknKSknKSc0OinAKcApOjQ0PjTFMss7yeSL5Z9aV1ciHx8iafSDIh8fIh8fHyKfPsIxOjQ0
        OikpMSkxKTExMTIyPsHK39/f4OXs7PL08/DvpaXw9KVXHyIfHyIfIh9dxjQpKTEpMSk0qzHAMcAxvMHk
        lm1dWldbWl1eZWhve36Hnp6IbSEiHx8fHx8fHx9cysUxqzI0qzExMTExMTE2wZZeIh8fIh8iHx8fHx8i
        Hx8fHx8iIh8fHx8fIh8fIh9axzYxMTExMTEzpzGsMa3AiyMfHyIfHx8fIh8iHx8fHx8fHx8fHx8iHyIf
        HyIfHyJbzMMxp6czpzEzpzGnM6zHXB8iHx8fIh8fHx8fIh8iHx8iHx8iHx8fHx8fHx8fHx9lzKszMzMz
        pzEzM6anpqyMIh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx92xKump6YzM6anqqaupr3MZB8f
        Ih8fIh8iHx8iHx8iHx8iHx8iHx8iHyIfIh8fIiLhrK+mqjOqqqampqampqa9liIfHyIfHx8fIh8fIh8f
        Ih8fIh8fIh8fHx8fHyIfH27Iqqampqampqapt6bNptCq1HkfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fZOPTqM2mtqqptqaoqKioqKiortRsIh9XZWxnYFxXIiIfHx8fHx8iHx8iHyIfHyJ046+pqKimqKim
        qKaquqjNqNCouM7nYnT21PXU9ejo5pafhXtnXlkiHx8fIiJdgOHU0qnQqNCouqmyt6iwqKioqKiosKm3
        zs6vtbKytbWut7i+zs/T1Ofo4Z+f4efUz7e1qLCoqKioqKiosKiytrC5sLmwsrGyurG7sLqwtbGxubC/
        sb+yu7q40bjVt9K1urKxtrC5sLmwtLGxtLG0tLC0sLSws7GwtLC0sLSws7GwsbCxsLSwsbGzsrG0sLSw
        sbOwsbCxsLSwsbCztLG0tLO0sbSwtLOzsbC0s7SwtLO0tLDXsLSztLOztLDXsLaztLOxtLDXsLSwtLS0
        tLO517PYs9iz17TX17TYs9izubS017PYs9izubTXubPYs9iz17TX17PYs9iz17TXubTZtLOztLO01rSz
        s9azs7O01tbWtNazs7O01rOz1rOzs7OztNazs7Oz1rO01rOz1tn82dbb1tvW2NfX2Nbb1tvW2NfX2Nbb
        1tvW2NfX2Nbb1tvW2NfX2Nbb1tvW2NfX2fsA+tfW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbW
        1tbW1tbW1tbW1tbX+gAAAPz5297b3dzc3dve2t7a3dzc3dve3N7a3dzc3dre2t7a3dzc3dre2t7a3fn8
        AADAAAAAAAMAAIAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAAAAQAAwAAAAAADAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAAAAABgADBAQABAUFAAEBDAAJCwkACw0KAA4ODgACAhYAGh4YAB8fHwAcIRoAHyMcAAAA
        IAAJCyAAAAAoAAkLKwAfHyAAHh4tAAAAMQAAADkAHx80AB0hNgAgICAAIyUkACQmJAAmKCYAIiIvACot
        KgAtLywALTEsACAhNQA7PzgAAHYAAAB4AAAIfQcACX0IADpANwA9QjoAP0k/AEBJOgBETj4AAQFBAAAA
        SgAfH0MAHh5KAAAAUgAGCFYAAABbABQXXgAfH1kAGyBEAB8kVQAhJEIAISJLACcpSAAnKVAAICFaACkw
        VAAAAGMABwhmAAAAbAAfH2AAHh9tAAAAdAAAAHwAHx92AB8gdgAiI2EALDJiADQ6bQAiI3EAKix0AC82
        fgAwN38AODx7AEVMQABASkYAS1ZEAFRcTwBXZE8AV25QAF1sVABVaF8AX3dXAGFtWgBidlcAZXJdAEVM
        ZABARWwAUFlkAEBJeQBOWnsAXmxsAFp7YgBccnAAUn94AGlpaQBubm4AaXVqAGl5egAJhwMAB4AIAA2C
        DQAQhA8AFYoOAA+EEAATgxMAGogWABuGHAAciBoAIYscAB6HJAAliyEAK40pAC+RJgAvkyoAM5QvADqG
        NwA0jzYANY49ADOTMgA6lDMANZE4AD6XPAA9mDgARY4/AESQPgA2jUAAO49CAD2SQABNj00ATZZFAEWc
        QABDk0oAT5BIAEGYSABcglQAWoxSAEWSUABOnFMASJVaAFOdVgBlllwAT6JGAFekRwBepVMAXaNdAGGp
        VABorV0AcrFfAEyLYQBTjWUAU4xqAFqRZwBVlW8AWY52AFuccQBhiGwAYpZmAG2UbQBpgXQAbYt9AHOO
        cQBxg3oAapV6AGWpYgByrmoAZ6B+AHyxcgCFu30Aibp8AAAAhQAICYcAAACNAAoMiAAfH4UAHx+MAAEB
        lgAAAJ4AHx+cAB0inAAgIIUAICCMAC0vigAgJZUAISGcADAzkQA1OZMAMTWeAAEBpQAHCaAABQWoAA4O
        qwAOEaEAEBOhABUYoQAfH6IAEBKpAAsLsgAPD7wAHx+yABwgogAfILIAISKjACUrpAAoL6UAKjClADA4
        pgAhIbIAKSuzACkpuwAwML8APkSCADtGpgBIT4QAUVmGAERKkgBOXJkAWn2OAFRolwBqfYUAYHSJAExV
        qgBNWKoAW2iqAGN8oAAPD8QAERHEAC0tywA/P8sATk7OAFZWzQBdXc8AXIuJAF+FkgBqnYcAaZWIAHaZ
        hwBzgpUAdZeeAHCHqACOjo4Ah5+EAIebiQCIrIgAkryFAJa6jACYuogAqMSXAKfBmACoqN8As7PhAMPD
        5gD5+fkA////AABhCgoACgoACgoACgoACgoACgoACgoACgoACgoACmEA8gAKCgAKCgAKCgAKCgAKCgAK
        CgAKCgAKCgAKCgAKCmEHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwoACgoACgoAFxcAGhcA
        FxcAFxcACgoAChcAFwoACgoACgAKCgAKCgAcJSlXVylMJQweHAcXFwUaHgoaDAAKCgAAAAAAAAAAGFF+
        cWVpcnp+h4qJVlBOTlKKdikHAAAAAAoACgoAFyWJayIiIiIiIiIhISEiaW9vayIhfk8DGAoAEQAREQAe
        VGgiIiIiIiIiIiIiIiIiIiIiIiIijwwKCgAAAQABAR5/ISIiIiIiIiIiIiIiIiIiIiIiIiJvJwEBABII
        EhIIY2siIiIiIiIiIiIiIiIiIiIiIiIiImxMHxsIEggSHw6jIiIiIiIiIiIiIiIiIiIiIiIiIiJroBIf
        HwgNDQ0NEF4iIiIiIiIhbnp6c29saGYiZmpyg1MfDQ0NCCwPLC0QoSIiIiIiIZT4lJGSlqvz9KRdXVot
        Ny0NNiwPLRMtLRNYn2giIiJo+msiIiEha/V4ZDY4LRA2NhM2LRMUFBQUFCo6nmshIm72IiIiIiIiq29y
        XzYUFBMUFBQUFDIqMjkqOTk0onEhIvloISIiIiGSkCFtolkqOTkqMjIqPis+Pis5RCtG3XsiqnUiIiIi
        In2VIiJrpUVERCs+PisuLi4uLi4uLi4+XIuMkyIiIiIhhZMiIiJomkYvLi4uLj8wPz8wR0g/19hb76Xu
        fHtvb3v4dCIiIiEimEswPz8wPztCQzzV3peCe3uCho6mp6mrp3siIiIiIiKA1ztDQjtAPT1ASploIiIi
        IiIiIiEhISIiIiIiIiIiInhKPT09PbBAtrhgIiIiIiIiIiIiIiIiIiIiIiIiIiIihtlAtrBAsUG3u5ch
        IiIiIiIiIiIiIiIiIiIiIiIiIiGcvEGxsUGsrKyv3GsiIiIiIiIiIiIiIiIiIiIiIiIibdqvrKysrLSu
        tLq57SIiISIhISEhIiIiIiIiIiIiIWvbvbqutLSuxbLFxbLgm3Co8OvsnY2GeW5qIiIiIm2N8bXFxbLF
        xbK/s7Ozs7/P1sXDw8TKzdDW3+Hi6uri4M/Ds7Ozs7Ozv9LAycm/ydG/y8u/ycm/ydHA0tLG0tLA0cu/
        ycm/ydHB1MfU08fT08fU08fT08fT1MfT08fU08fU08fT08fT1MfUyMjIyMjIyMjIyMjIyMjIyMjIyMjI
        yMjIyMjIyMjI1P3k5eXj5eXj5eXj5eXj5eXj5eXj5eXj5eXj5eXj5eX7APzo5+bn5+bn5+bn5+bn5+bn
        5+bn5+bn5+bn5+bp/ACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAASgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAABwcHAAkJCQAPDw8ABwcSAA8PEAAPDxkAEBEQABMUFAAYGhgAHx8fAAcHIgAPDyoADxEpAA8P
        OQAlKSQAJywtACkuMAA1PDEAAHcAAAB4AAAEewMAA3sEAAV6BQAGfAYACH0HAAp+CgA6QTcAPUw4ADdY
        NAA9XDgANnUwADh0MgBAWjwAQGw7AEJvPAAHB0MACQpEAA8PSQAfH0YAEhRJAAcHUwAHB1QACQlUAA8P
        WQAiIkgAJSlJAC42TgAPD2kAEBBpABocbQAHB3QACAl1AB8fcwAUFXoAHyJiAC41aQA4SEcAM0BcADxo
        RgAse0MAMn1AADZvWAA+dVIAPVNyADpnZgA/anoAQEhbAEBpVABCaWoAQnJgAEl8YgB8fHwADIALAA+B
        DQAUgxAAFoEUAB2HGQAZghwAHYIdAByHHwAgiR4AHoQmACeMJAAujycAKYMtADSRKwAykS0AKYczADqT
        NABCgDwAMoRGADeKRwBRnkkAU6FKAFKgTgBZo1cAXaRXAF6ZaABmim4Aa6JmAGyqYQAHB4QACAiEABYY
        igAPD5gAEBCYACAgnwAHB6UACgqmAAwNpgAPD6gAERKnABkbqAAcHqoAFBS5ABwcuwAlJqAAISapACcs
        qgAsMKwANDusADlLigA3RZgAPlGhAERXowAyMsoANjbKAD09zAChoeIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8ASAoDAwoDAwoDAwoDAwoDSAMDAQEHAwMDAQMDAQMDAQMBAwEHIR8fIh4cGxIdDwEBBQoHIxYT
        ExMTExoaE1oKAwQGEEwWExYTExYTFhMaEAQLDDkWExMWTUsaFhZNOwwLDicvTRMWZVRWZGNDLi4ODiQm
        JTpVGV0WE1lTRCYmJCQpLCkrOD1gExZRVhY/NykpMDUyQEZHYl1eYBoWE0UxMDM2PhYWExYTExMTExZB
        NDNmaDwTExMTFhMWExMWemdmamt7UlxbWE0aExZNQnVpam5vbnZycHJ4eXx9d25vbG50dHNzdHNzdHNz
        dHNzdHN0gYB+foB+foB+foB+foB+gQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </metadata>
</root>